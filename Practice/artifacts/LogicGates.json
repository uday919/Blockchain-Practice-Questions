{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610274806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80639f6ee0fc14610051578063b0ad3a5f14610081578063e95e21bc146100b1578063f1f3da0e146100e1575b600080fd5b61006b600480360381019061006691906101a7565b610111565b60405161007891906101f6565b60405180910390f35b61009b60048036038101906100969190610211565b610125565b6040516100a891906101f6565b60405180910390f35b6100cb60048036038101906100c691906101a7565b610130565b6040516100d891906101f6565b60405180910390f35b6100fb60048036038101906100f691906101a7565b610157565b60405161010891906101f6565b60405180910390f35b600082801561011d5750815b905092915050565b600081159050919050565b600082801561013d575081155b8061014f57508215801561014e5750815b5b905092915050565b600082806101625750815b905092915050565b600080fd5b60008115159050919050565b6101848161016f565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b600080604083850312156101be576101bd61016a565b5b60006101cc85828601610192565b92505060206101dd85828601610192565b9150509250929050565b6101f08161016f565b82525050565b600060208201905061020b60008301846101e7565b92915050565b6000602082840312156102275761022661016a565b5b600061023584828501610192565b9150509291505056fea264697066735822122029a2d4411880029ba24ec8615f0523fde9db0770df6f5a2f3a9d89737ee27b8e64736f6c63430008120033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F6EE0FC EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB0AD3A5F EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xE95E21BC EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF1F3DA0E EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x11D JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x13D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x14F JUMPI POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI POP DUP2 JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH2 0x162 JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A1 DUP2 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP5 DUP3 DUP6 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LOG2 0xD4 COINBASE XOR DUP1 MUL SWAP12 LOG2 0x4E 0xC8 PUSH2 0x5F05 0x23 REVERT 0xE9 0xDB SMOD PUSH17 0xDF6F5A2F3A9D89737EE27B8E64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
			"sourceMap": "67:369:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@and_15": {
					"entryPoint": 273,
					"id": 15,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@not_40": {
					"entryPoint": 293,
					"id": 40,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@or_29": {
					"entryPoint": 343,
					"id": 29,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@xor_62": {
					"entryPoint": 304,
					"id": 62,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_bool": {
					"entryPoint": 402,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bool": {
					"entryPoint": 529,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_boolt_bool": {
					"entryPoint": 423,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_encode_t_bool_to_t_bool_fromStack": {
					"entryPoint": 487,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": 502,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 367,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 362,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_bool": {
					"entryPoint": 379,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1816:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:1",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:1",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:1"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:1"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:1",
										"type": ""
									}
								],
								"src": "7:75:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:1",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:1"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:1",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:1"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "376:48:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "386:32:1",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "411:5:1"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "404:6:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "404:13:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "397:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "397:21:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "386:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "358:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "368:7:1",
										"type": ""
									}
								],
								"src": "334:90:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "470:76:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "524:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "533:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "536:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "526:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "526:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "526:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "493:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "515:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "500:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:21:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "490:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "490:32:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "483:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "483:40:1"
											},
											"nodeType": "YulIf",
											"src": "480:60:1"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "463:5:1",
										"type": ""
									}
								],
								"src": "430:116:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "601:84:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "611:29:1",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "633:6:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "620:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "620:20:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "611:5:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "673:5:1"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "649:23:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "649:30:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "649:30:1"
										}
									]
								},
								"name": "abi_decode_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "579:6:1",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "587:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "595:5:1",
										"type": ""
									}
								],
								"src": "552:133:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "768:385:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "814:83:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "816:77:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "816:79:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "816:79:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "789:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "798:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "785:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "785:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "810:2:1",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "781:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "781:32:1"
											},
											"nodeType": "YulIf",
											"src": "778:119:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "907:114:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "922:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "936:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "926:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "951:60:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "983:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "994:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1003:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool",
															"nodeType": "YulIdentifier",
															"src": "961:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "961:50:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "951:6:1"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1031:115:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1046:16:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1060:2:1",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1050:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1076:60:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1108:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1119:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1128:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1086:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1086:50:1"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1076:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_boolt_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "730:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "741:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "753:6:1",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "761:6:1",
										"type": ""
									}
								],
								"src": "691:462:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1218:50:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1235:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1255:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1240:14:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1240:21:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1228:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1228:34:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1228:34:1"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1206:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1213:3:1",
										"type": ""
									}
								],
								"src": "1159:109:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1366:118:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1376:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1388:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1399:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1384:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1384:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1376:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1450:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1463:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1474:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1459:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1459:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1412:37:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1412:65:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1412:65:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1338:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1350:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1361:4:1",
										"type": ""
									}
								],
								"src": "1274:210:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1553:260:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1599:83:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1601:77:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1601:79:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1601:79:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1574:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1583:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1570:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1570:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1595:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1566:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1566:32:1"
											},
											"nodeType": "YulIf",
											"src": "1563:119:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "1692:114:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1707:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1721:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1711:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1736:60:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1768:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1779:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1788:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1746:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1746:50:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1736:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1523:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1534:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1546:6:1",
										"type": ""
									}
								],
								"src": "1490:323:1"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80639f6ee0fc14610051578063b0ad3a5f14610081578063e95e21bc146100b1578063f1f3da0e146100e1575b600080fd5b61006b600480360381019061006691906101a7565b610111565b60405161007891906101f6565b60405180910390f35b61009b60048036038101906100969190610211565b610125565b6040516100a891906101f6565b60405180910390f35b6100cb60048036038101906100c691906101a7565b610130565b6040516100d891906101f6565b60405180910390f35b6100fb60048036038101906100f691906101a7565b610157565b60405161010891906101f6565b60405180910390f35b600082801561011d5750815b905092915050565b600081159050919050565b600082801561013d575081155b8061014f57508215801561014e5750815b5b905092915050565b600082806101625750815b905092915050565b600080fd5b60008115159050919050565b6101848161016f565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b600080604083850312156101be576101bd61016a565b5b60006101cc85828601610192565b92505060206101dd85828601610192565b9150509250929050565b6101f08161016f565b82525050565b600060208201905061020b60008301846101e7565b92915050565b6000602082840312156102275761022661016a565b5b600061023584828501610192565b9150509291505056fea264697066735822122029a2d4411880029ba24ec8615f0523fde9db0770df6f5a2f3a9d89737ee27b8e64736f6c63430008120033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F6EE0FC EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB0AD3A5F EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xE95E21BC EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF1F3DA0E EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x11D JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x13D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x14F JUMPI POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI POP DUP2 JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH2 0x162 JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A1 DUP2 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP5 DUP3 DUP6 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LOG2 0xD4 COINBASE XOR DUP1 MUL SWAP12 LOG2 0x4E 0xC8 PUSH2 0x5F05 0x23 REVERT 0xE9 0xDB SMOD PUSH17 0xDF6F5A2F3A9D89737EE27B8E64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
			"sourceMap": "67:369:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;263:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;340:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;178:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;92:81;140:4;162:1;:4;;;;;165:1;162:4;155:11;;92:81;;;;:::o;263:72::-;304:4;327:1;326:2;319:9;;263:72;;;:::o;340:93::-;388:4;411:1;:5;;;;;415:1;414:2;411:5;410:16;;;;421:1;420:2;:5;;;;;424:1;420:5;410:16;403:23;;340:93;;;;:::o;178:80::-;225:4;247:1;:4;;;;250:1;247:4;240:11;;178:80;;;;:::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:462::-;753:6;761;810:2;798:9;789:7;785:23;781:32;778:119;;;816:79;;:::i;:::-;778:119;936:1;961:50;1003:7;994:6;983:9;979:22;961:50;:::i;:::-;951:60;;907:114;1060:2;1086:50;1128:7;1119:6;1108:9;1104:22;1086:50;:::i;:::-;1076:60;;1031:115;691:462;;;;;:::o;1159:109::-;1240:21;1255:5;1240:21;:::i;:::-;1235:3;1228:34;1159:109;;:::o;1274:210::-;1361:4;1399:2;1388:9;1384:18;1376:26;;1412:65;1474:1;1463:9;1459:17;1450:6;1412:65;:::i;:::-;1274:210;;;;:::o;1490:323::-;1546:6;1595:2;1583:9;1574:7;1570:23;1566:32;1563:119;;;1601:79;;:::i;:::-;1563:119;1721:1;1746:50;1788:7;1779:6;1768:9;1764:22;1746:50;:::i;:::-;1736:60;;1692:114;1490:323;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "125600",
				"executionCost": "171",
				"totalCost": "125771"
			},
			"external": {
				"and(bool,bool)": "infinite",
				"not(bool)": "infinite",
				"or(bool,bool)": "infinite",
				"xor(bool,bool)": "infinite"
			}
		},
		"methodIdentifiers": {
			"and(bool,bool)": "9f6ee0fc",
			"not(bool)": "b0ad3a5f",
			"or(bool,bool)": "f1f3da0e",
			"xor(bool,bool)": "e95e21bc"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "a",
					"type": "bool"
				},
				{
					"internalType": "bool",
					"name": "b",
					"type": "bool"
				}
			],
			"name": "and",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "a",
					"type": "bool"
				}
			],
			"name": "not",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "a",
					"type": "bool"
				},
				{
					"internalType": "bool",
					"name": "b",
					"type": "bool"
				}
			],
			"name": "or",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "a",
					"type": "bool"
				},
				{
					"internalType": "bool",
					"name": "b",
					"type": "bool"
				}
			],
			"name": "xor",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		}
	]
}