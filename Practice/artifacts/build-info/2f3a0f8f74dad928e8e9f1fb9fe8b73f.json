{
	"id": "2f3a0f8f74dad928e8e9f1fb9fe8b73f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Practise/LogicGates.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <=0.8.18;\ncontract LogicGates{\n    function and(bool a,bool b) public pure returns(bool){\n        return a&&b;\n    }\n    function or(bool a,bool b) public pure returns(bool){\n        return a||b;\n    }\n    function not(bool a) public pure returns(bool){\n        return !a;\n    }\n    function xor(bool a, bool b)public pure returns(bool){\n        return (a&&!b)||(!a&&b);\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Practise/LogicGates.sol": {
				"LogicGates": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "a",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"name": "and",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "a",
									"type": "bool"
								}
							],
							"name": "not",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "a",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"name": "or",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "a",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"name": "xor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Practise/LogicGates.sol\":67:436  contract LogicGates{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Practise/LogicGates.sol\":67:436  contract LogicGates{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9f6ee0fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb0ad3a5f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe95e21bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf1f3da0e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Practise/LogicGates.sol\":92:173  function and(bool a,bool b) public pure returns(bool){... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practise/LogicGates.sol\":263:335  function not(bool a) public pure returns(bool){... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practise/LogicGates.sol\":340:433  function xor(bool a, bool b)public pure returns(bool){... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practise/LogicGates.sol\":178:258  function or(bool a,bool b) public pure returns(bool){... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practise/LogicGates.sol\":92:173  function and(bool a,bool b) public pure returns(bool){... */\n    tag_10:\n        /* \"Practise/LogicGates.sol\":140:144  bool */\n      0x00\n        /* \"Practise/LogicGates.sol\":162:163  a */\n      dup3\n        /* \"Practise/LogicGates.sol\":162:166  a&&b */\n      dup1\n      iszero\n      tag_27\n      jumpi\n      pop\n        /* \"Practise/LogicGates.sol\":165:166  b */\n      dup2\n        /* \"Practise/LogicGates.sol\":162:166  a&&b */\n    tag_27:\n        /* \"Practise/LogicGates.sol\":155:166  return a&&b */\n      swap1\n      pop\n        /* \"Practise/LogicGates.sol\":92:173  function and(bool a,bool b) public pure returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Practise/LogicGates.sol\":263:335  function not(bool a) public pure returns(bool){... */\n    tag_16:\n        /* \"Practise/LogicGates.sol\":304:308  bool */\n      0x00\n        /* \"Practise/LogicGates.sol\":327:328  a */\n      dup2\n        /* \"Practise/LogicGates.sol\":326:328  !a */\n      iszero\n        /* \"Practise/LogicGates.sol\":319:328  return !a */\n      swap1\n      pop\n        /* \"Practise/LogicGates.sol\":263:335  function not(bool a) public pure returns(bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Practise/LogicGates.sol\":340:433  function xor(bool a, bool b)public pure returns(bool){... */\n    tag_20:\n        /* \"Practise/LogicGates.sol\":388:392  bool */\n      0x00\n        /* \"Practise/LogicGates.sol\":411:412  a */\n      dup3\n        /* \"Practise/LogicGates.sol\":411:416  a&&!b */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"Practise/LogicGates.sol\":415:416  b */\n      dup2\n        /* \"Practise/LogicGates.sol\":414:416  !b */\n      iszero\n        /* \"Practise/LogicGates.sol\":411:416  a&&!b */\n    tag_30:\n        /* \"Practise/LogicGates.sol\":410:426  (a&&!b)||(!a&&b) */\n      dup1\n      tag_31\n      jumpi\n      pop\n        /* \"Practise/LogicGates.sol\":421:422  a */\n      dup3\n        /* \"Practise/LogicGates.sol\":420:422  !a */\n      iszero\n        /* \"Practise/LogicGates.sol\":420:425  !a&&b */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"Practise/LogicGates.sol\":424:425  b */\n      dup2\n        /* \"Practise/LogicGates.sol\":420:425  !a&&b */\n    tag_32:\n        /* \"Practise/LogicGates.sol\":410:426  (a&&!b)||(!a&&b) */\n    tag_31:\n        /* \"Practise/LogicGates.sol\":403:426  return (a&&!b)||(!a&&b) */\n      swap1\n      pop\n        /* \"Practise/LogicGates.sol\":340:433  function xor(bool a, bool b)public pure returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Practise/LogicGates.sol\":178:258  function or(bool a,bool b) public pure returns(bool){... */\n    tag_24:\n        /* \"Practise/LogicGates.sol\":225:229  bool */\n      0x00\n        /* \"Practise/LogicGates.sol\":247:248  a */\n      dup3\n        /* \"Practise/LogicGates.sol\":247:251  a||b */\n      dup1\n      tag_34\n      jumpi\n      pop\n        /* \"Practise/LogicGates.sol\":250:251  b */\n      dup2\n        /* \"Practise/LogicGates.sol\":247:251  a||b */\n    tag_34:\n        /* \"Practise/LogicGates.sol\":240:251  return a||b */\n      swap1\n      pop\n        /* \"Practise/LogicGates.sol\":178:258  function or(bool a,bool b) public pure returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_38:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_39:\n        /* \"#utility.yul\":500:521   */\n      tag_48\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_49:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_40:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_51\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1153   */\n    tag_9:\n        /* \"#utility.yul\":753:759   */\n      0x00\n        /* \"#utility.yul\":761:767   */\n      dup1\n        /* \"#utility.yul\":810:812   */\n      0x40\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":789:796   */\n      dup6\n        /* \"#utility.yul\":785:808   */\n      sub\n        /* \"#utility.yul\":781:813   */\n      slt\n        /* \"#utility.yul\":778:897   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":816:895   */\n      tag_54\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":778:897   */\n    tag_53:\n        /* \"#utility.yul\":936:937   */\n      0x00\n        /* \"#utility.yul\":961:1011   */\n      tag_55\n        /* \"#utility.yul\":1003:1010   */\n      dup6\n        /* \"#utility.yul\":994:1000   */\n      dup3\n        /* \"#utility.yul\":983:992   */\n      dup7\n        /* \"#utility.yul\":979:1001   */\n      add\n        /* \"#utility.yul\":961:1011   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":951:1011   */\n      swap3\n      pop\n        /* \"#utility.yul\":907:1021   */\n      pop\n        /* \"#utility.yul\":1060:1062   */\n      0x20\n        /* \"#utility.yul\":1086:1136   */\n      tag_56\n        /* \"#utility.yul\":1128:1135   */\n      dup6\n        /* \"#utility.yul\":1119:1125   */\n      dup3\n        /* \"#utility.yul\":1108:1117   */\n      dup7\n        /* \"#utility.yul\":1104:1126   */\n      add\n        /* \"#utility.yul\":1086:1136   */\n      tag_40\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1076:1136   */\n      swap2\n      pop\n        /* \"#utility.yul\":1031:1146   */\n      pop\n        /* \"#utility.yul\":691:1153   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1159:1268   */\n    tag_41:\n        /* \"#utility.yul\":1240:1261   */\n      tag_58\n        /* \"#utility.yul\":1255:1260   */\n      dup2\n        /* \"#utility.yul\":1240:1261   */\n      tag_38\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1235:1238   */\n      dup3\n        /* \"#utility.yul\":1228:1262   */\n      mstore\n        /* \"#utility.yul\":1159:1268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1274:1484   */\n    tag_12:\n        /* \"#utility.yul\":1361:1365   */\n      0x00\n        /* \"#utility.yul\":1399:1401   */\n      0x20\n        /* \"#utility.yul\":1388:1397   */\n      dup3\n        /* \"#utility.yul\":1384:1402   */\n      add\n        /* \"#utility.yul\":1376:1402   */\n      swap1\n      pop\n        /* \"#utility.yul\":1412:1477   */\n      tag_60\n        /* \"#utility.yul\":1474:1475   */\n      0x00\n        /* \"#utility.yul\":1463:1472   */\n      dup4\n        /* \"#utility.yul\":1459:1476   */\n      add\n        /* \"#utility.yul\":1450:1456   */\n      dup5\n        /* \"#utility.yul\":1412:1477   */\n      tag_41\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1274:1484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1490:1813   */\n    tag_15:\n        /* \"#utility.yul\":1546:1552   */\n      0x00\n        /* \"#utility.yul\":1595:1597   */\n      0x20\n        /* \"#utility.yul\":1583:1592   */\n      dup3\n        /* \"#utility.yul\":1574:1581   */\n      dup5\n        /* \"#utility.yul\":1570:1593   */\n      sub\n        /* \"#utility.yul\":1566:1598   */\n      slt\n        /* \"#utility.yul\":1563:1682   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1601:1680   */\n      tag_63\n      tag_36\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1563:1682   */\n    tag_62:\n        /* \"#utility.yul\":1721:1722   */\n      0x00\n        /* \"#utility.yul\":1746:1796   */\n      tag_64\n        /* \"#utility.yul\":1788:1795   */\n      dup5\n        /* \"#utility.yul\":1779:1785   */\n      dup3\n        /* \"#utility.yul\":1768:1777   */\n      dup6\n        /* \"#utility.yul\":1764:1786   */\n      add\n        /* \"#utility.yul\":1746:1796   */\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1736:1796   */\n      swap2\n      pop\n        /* \"#utility.yul\":1692:1806   */\n      pop\n        /* \"#utility.yul\":1490:1813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206373308952dd9c656eaf7209f15cb919755f70510d6ae4072857b90a90183fe064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610274806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80639f6ee0fc14610051578063b0ad3a5f14610081578063e95e21bc146100b1578063f1f3da0e146100e1575b600080fd5b61006b600480360381019061006691906101a7565b610111565b60405161007891906101f6565b60405180910390f35b61009b60048036038101906100969190610211565b610125565b6040516100a891906101f6565b60405180910390f35b6100cb60048036038101906100c691906101a7565b610130565b6040516100d891906101f6565b60405180910390f35b6100fb60048036038101906100f691906101a7565b610157565b60405161010891906101f6565b60405180910390f35b600082801561011d5750815b905092915050565b600081159050919050565b600082801561013d575081155b8061014f57508215801561014e5750815b5b905092915050565b600082806101625750815b905092915050565b600080fd5b60008115159050919050565b6101848161016f565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b600080604083850312156101be576101bd61016a565b5b60006101cc85828601610192565b92505060206101dd85828601610192565b9150509250929050565b6101f08161016f565b82525050565b600060208201905061020b60008301846101e7565b92915050565b6000602082840312156102275761022661016a565b5b600061023584828501610192565b9150509291505056fea26469706673582212206373308952dd9c656eaf7209f15cb919755f70510d6ae4072857b90a90183fe064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F6EE0FC EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB0AD3A5F EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xE95E21BC EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF1F3DA0E EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x11D JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x13D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x14F JUMPI POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI POP DUP2 JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH2 0x162 JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A1 DUP2 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP5 DUP3 DUP6 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x73308952 0xDD SWAP13 PUSH6 0x6EAF7209F15C 0xB9 NOT PUSH22 0x5F70510D6AE4072857B90A90183FE064736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "67:369:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@and_15": {
									"entryPoint": 273,
									"id": 15,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@not_40": {
									"entryPoint": 293,
									"id": 40,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@or_29": {
									"entryPoint": 343,
									"id": 29,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@xor_62": {
									"entryPoint": 304,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_bool": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1816:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "368:7:1",
														"type": ""
													}
												],
												"src": "334:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:40:1"
															},
															"nodeType": "YulIf",
															"src": "480:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"src": "430:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "611:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "579:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "587:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"src": "552:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "768:385:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "816:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "789:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "785:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "810:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "781:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:32:1"
															},
															"nodeType": "YulIf",
															"src": "778:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "907:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "922:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "926:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "951:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "983:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "994:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "979:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "979:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1003:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "961:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "961:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "951:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1031:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1046:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1050:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1076:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1108:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1119:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1104:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1104:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1128:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1086:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1076:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													}
												],
												"src": "691:462:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1235:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1255:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1240:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1228:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1213:3:1",
														"type": ""
													}
												],
												"src": "1159:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1366:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1376:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1388:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1384:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1376:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1450:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1474:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1459:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1412:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1412:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1338:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1350:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1361:4:1",
														"type": ""
													}
												],
												"src": "1274:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1599:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1601:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1601:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1601:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1574:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1583:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1570:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:32:1"
															},
															"nodeType": "YulIf",
															"src": "1563:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1692:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1707:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1721:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1711:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1736:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1768:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1779:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1764:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1764:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1788:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1746:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1523:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1534:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1546:6:1",
														"type": ""
													}
												],
												"src": "1490:323:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80639f6ee0fc14610051578063b0ad3a5f14610081578063e95e21bc146100b1578063f1f3da0e146100e1575b600080fd5b61006b600480360381019061006691906101a7565b610111565b60405161007891906101f6565b60405180910390f35b61009b60048036038101906100969190610211565b610125565b6040516100a891906101f6565b60405180910390f35b6100cb60048036038101906100c691906101a7565b610130565b6040516100d891906101f6565b60405180910390f35b6100fb60048036038101906100f691906101a7565b610157565b60405161010891906101f6565b60405180910390f35b600082801561011d5750815b905092915050565b600081159050919050565b600082801561013d575081155b8061014f57508215801561014e5750815b5b905092915050565b600082806101625750815b905092915050565b600080fd5b60008115159050919050565b6101848161016f565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b600080604083850312156101be576101bd61016a565b5b60006101cc85828601610192565b92505060206101dd85828601610192565b9150509250929050565b6101f08161016f565b82525050565b600060208201905061020b60008301846101e7565b92915050565b6000602082840312156102275761022661016a565b5b600061023584828501610192565b9150509291505056fea26469706673582212206373308952dd9c656eaf7209f15cb919755f70510d6ae4072857b90a90183fe064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F6EE0FC EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB0AD3A5F EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xE95E21BC EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF1F3DA0E EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x11D JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x13D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x14F JUMPI POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI POP DUP2 JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH2 0x162 JUMPI POP DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A1 DUP2 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP5 DUP3 DUP6 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x73308952 0xDD SWAP13 PUSH6 0x6EAF7209F15C 0xB9 NOT PUSH22 0x5F70510D6AE4072857B90A90183FE064736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "67:369:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;263:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;340:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;178:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;92:81;140:4;162:1;:4;;;;;165:1;162:4;155:11;;92:81;;;;:::o;263:72::-;304:4;327:1;326:2;319:9;;263:72;;;:::o;340:93::-;388:4;411:1;:5;;;;;415:1;414:2;411:5;410:16;;;;421:1;420:2;:5;;;;;424:1;420:5;410:16;403:23;;340:93;;;;:::o;178:80::-;225:4;247:1;:4;;;;250:1;247:4;240:11;;178:80;;;;:::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:462::-;753:6;761;810:2;798:9;789:7;785:23;781:32;778:119;;;816:79;;:::i;:::-;778:119;936:1;961:50;1003:7;994:6;983:9;979:22;961:50;:::i;:::-;951:60;;907:114;1060:2;1086:50;1128:7;1119:6;1108:9;1104:22;1086:50;:::i;:::-;1076:60;;1031:115;691:462;;;;;:::o;1159:109::-;1240:21;1255:5;1240:21;:::i;:::-;1235:3;1228:34;1159:109;;:::o;1274:210::-;1361:4;1399:2;1388:9;1384:18;1376:26;;1412:65;1474:1;1463:9;1459:17;1450:6;1412:65;:::i;:::-;1274:210;;;;:::o;1490:323::-;1546:6;1595:2;1583:9;1574:7;1570:23;1566:32;1563:119;;;1601:79;;:::i;:::-;1563:119;1721:1;1746:50;1788:7;1779:6;1768:9;1764:22;1746:50;:::i;:::-;1736:60;;1692:114;1490:323;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "125600",
								"executionCost": "171",
								"totalCost": "125771"
							},
							"external": {
								"and(bool,bool)": "infinite",
								"not(bool)": "infinite",
								"or(bool,bool)": "infinite",
								"xor(bool,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206373308952dd9c656eaf7209f15cb919755f70510d6ae4072857b90a90183fe064736f6c63430008120033",
									".code": [
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "9F6EE0FC"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "B0AD3A5F"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "E95E21BC"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "F1F3DA0E"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 92,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 92,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 263,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 263,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 263,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 340,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 178,
											"end": 258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 92,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 162,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 162,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 162,
											"end": 166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 162,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 162,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 263,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 411,
											"end": 416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 411,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 411,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 414,
											"end": 416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 411,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 410,
											"end": 426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 420,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 420,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 424,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 410,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 410,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 178,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 247,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 247,
											"end": 251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 247,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 240,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 810,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 789,
											"end": 796,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 785,
											"end": 808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 781,
											"end": 813,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 778,
											"end": 897,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 778,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 778,
											"end": 897,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 816,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 816,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 816,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 816,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 816,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 897,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 778,
											"end": 897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 951,
											"end": 1011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 951,
											"end": 1011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 907,
											"end": 1021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1128,
											"end": 1135,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1268,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1159,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1274,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1412,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1412,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1813,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1490,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1598,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1682,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1563,
											"end": 1682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1601,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1601,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1601,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1682,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1563,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1777,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1796,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1746,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Practise/LogicGates.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"and(bool,bool)": "9f6ee0fc",
							"not(bool)": "b0ad3a5f",
							"or(bool,bool)": "f1f3da0e",
							"xor(bool,bool)": "e95e21bc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"and\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"}],\"name\":\"not\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"or\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"xor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Practise/LogicGates.sol\":\"LogicGates\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Practise/LogicGates.sol\":{\"keccak256\":\"0xaaee904bfe76747c46971c27305970efcebf59fa8fab31d2dc553771d4a72ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86427c89aab63ea81f8babe5d5818eb9218eb4ac65422614d38084d839844a7f\",\"dweb:/ipfs/QmbJoaooTGtwxcGcVEJ1ipne93Uap6FrjaCzBbPtex4Mwt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Practise/LogicGates.sol": {
				"ast": {
					"absolutePath": "Practise/LogicGates.sol",
					"exportedSymbols": {
						"LogicGates": [
							63
						]
					},
					"id": 64,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:34:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LogicGates",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "LogicGates",
							"nameLocation": "76:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "145:28:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "162:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 11,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 13,
												"nodeType": "Return",
												"src": "155:11:0"
											}
										]
									},
									"functionSelector": "9f6ee0fc",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "and",
									"nameLocation": "101:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "110:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "105:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "105:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "117:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "112:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "112:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:15:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:6:0"
									},
									"scope": 63,
									"src": "92:81:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "230:28:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "247:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 25,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "250:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 23,
												"id": 27,
												"nodeType": "Return",
												"src": "240:11:0"
											}
										]
									},
									"functionSelector": "f1f3da0e",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "or",
									"nameLocation": "187:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "195:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "190:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "202:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "197:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:15:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "225:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "225:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:6:0"
									},
									"scope": 63,
									"src": "178:80:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "309:26:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "326:2:0",
													"subExpression": {
														"id": 36,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 35,
												"id": 38,
												"nodeType": "Return",
												"src": "319:9:0"
											}
										]
									},
									"functionSelector": "b0ad3a5f",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "not",
									"nameLocation": "272:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "281:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "276:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:8:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "304:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 33,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "304:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:6:0"
									},
									"scope": 63,
									"src": "263:72:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "393:40:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 49,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "411:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "414:2:0",
																	"subExpression": {
																		"id": 50,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "415:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "411:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "420:2:0",
																	"subExpression": {
																		"id": 54,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "421:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 56,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "420:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 58,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "410:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "403:23:0"
											}
										]
									},
									"functionSelector": "e95e21bc",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "xor",
									"nameLocation": "349:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "358:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "353:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "366:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "361:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:16:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "388:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:6:0"
									},
									"scope": 63,
									"src": "340:93:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 64,
							"src": "67:369:0",
							"usedErrors": []
						}
					],
					"src": "32:404:0"
				},
				"id": 0
			}
		}
	}
}