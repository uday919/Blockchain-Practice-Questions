{
	"id": "3435193e3378956b30025fe79c7f24ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Practice/Destruct.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0<0.9.0;\ncontract HelloWorld{\n    address owner;\n    constructor(){\n        owner=msg.sender;\n    }\n    receive() external payable { }\n\n    function destroy() external{\n        require(owner==msg.sender,\"You are not the owner\");\n        selfdestruct(payable(owner));\n    }\n    function getOwner()public view returns(address){\n        return owner;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Practice/Destruct.sol": {
				"HelloWorld": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Practice/Destruct.sol\":63:410  contract HelloWorld{... */\n  mstore(0x40, 0x80)\n    /* \"Practice/Destruct.sol\":107:153  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Practice/Destruct.sol\":136:146  msg.sender */\n  caller\n    /* \"Practice/Destruct.sol\":130:135  owner */\n  0x00\n  dup1\n    /* \"Practice/Destruct.sol\":130:146  owner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Practice/Destruct.sol\":63:410  contract HelloWorld{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Practice/Destruct.sol\":63:410  contract HelloWorld{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83197ef0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Practice/Destruct.sol\":194:326  function destroy() external{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Practice/Destruct.sol\":331:407  function getOwner()public view returns(address){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practice/Destruct.sol\":194:326  function destroy() external{... */\n    tag_9:\n        /* \"Practice/Destruct.sol\":246:256  msg.sender */\n      caller\n        /* \"Practice/Destruct.sol\":239:256  owner==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice/Destruct.sol\":239:244  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice/Destruct.sol\":239:256  owner==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Practice/Destruct.sol\":231:281  require(owner==msg.sender,\"You are not the owner\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"Practice/Destruct.sol\":312:317  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice/Destruct.sol\":291:319  selfdestruct(payable(owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"Practice/Destruct.sol\":331:407  function getOwner()public view returns(address){... */\n    tag_12:\n        /* \"Practice/Destruct.sol\":370:377  address */\n      0x00\n        /* \"Practice/Destruct.sol\":395:400  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice/Destruct.sol\":388:400  return owner */\n      swap1\n      pop\n        /* \"Practice/Destruct.sol\":331:407  function getOwner()public view returns(address){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_20:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_21:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_29\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_22:\n        /* \"#utility.yul\":328:352   */\n      tag_31\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_21\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_33\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_23:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:939   */\n    tag_24:\n        /* \"#utility.yul\":908:931   */\n      0x596f7520617265206e6f7420746865206f776e65720000000000000000000000\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:932   */\n      mstore\n        /* \"#utility.yul\":768:939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":945:1311   */\n    tag_25:\n        /* \"#utility.yul\":1087:1090   */\n      0x00\n        /* \"#utility.yul\":1108:1175   */\n      tag_37\n        /* \"#utility.yul\":1172:1174   */\n      0x15\n        /* \"#utility.yul\":1167:1170   */\n      dup4\n        /* \"#utility.yul\":1108:1175   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1101:1175   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1277   */\n      tag_38\n        /* \"#utility.yul\":1273:1276   */\n      dup3\n        /* \"#utility.yul\":1184:1277   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1297:1300   */\n      dup3\n        /* \"#utility.yul\":1293:1305   */\n      add\n        /* \"#utility.yul\":1286:1305   */\n      swap1\n      pop\n        /* \"#utility.yul\":945:1311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1317:1736   */\n    tag_18:\n        /* \"#utility.yul\":1483:1487   */\n      0x00\n        /* \"#utility.yul\":1521:1523   */\n      0x20\n        /* \"#utility.yul\":1510:1519   */\n      dup3\n        /* \"#utility.yul\":1506:1524   */\n      add\n        /* \"#utility.yul\":1498:1524   */\n      swap1\n      pop\n        /* \"#utility.yul\":1570:1579   */\n      dup2\n        /* \"#utility.yul\":1564:1568   */\n      dup2\n        /* \"#utility.yul\":1560:1580   */\n      sub\n        /* \"#utility.yul\":1556:1557   */\n      0x00\n        /* \"#utility.yul\":1545:1554   */\n      dup4\n        /* \"#utility.yul\":1541:1558   */\n      add\n        /* \"#utility.yul\":1534:1581   */\n      mstore\n        /* \"#utility.yul\":1598:1729   */\n      tag_40\n        /* \"#utility.yul\":1724:1728   */\n      dup2\n        /* \"#utility.yul\":1598:1729   */\n      tag_25\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1590:1729   */\n      swap1\n      pop\n        /* \"#utility.yul\":1317:1736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072aa65daf43d79b5de83fd37dcb6b09c98ad0019c8edf8f0916acc0694e52c1664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061027a806100606000396000f3fe60806040526004361061002d5760003560e01c806383197ef014610039578063893d20e81461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e61007b565b005b34801561005c57600080fd5b50610065610142565b60405161007291906101ac565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010090610224565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101968261016b565b9050919050565b6101a68161018b565b82525050565b60006020820190506101c1600083018461019d565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b600061020e6015836101c7565b9150610219826101d8565b602082019050919050565b6000602082019050818103600083015261023d81610201565b905091905056fea264697066735822122072aa65daf43d79b5de83fd37dcb6b09c98ad0019c8edf8f0916acc0694e52c1664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x27A DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x50 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP1 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E PUSH1 0x15 DUP4 PUSH2 0x1C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x219 DUP3 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D DUP2 PUSH2 0x201 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xAA65DAF43D79B5DE83FD37DCB6B09C98AD0019 0xC8 0xED 0xF8 CREATE SWAP2 PUSH11 0xCC0694E52C1664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "63:347:0:-:0;;;107:46;;;;;;;;;;136:10;130:5;;:16;;;;;;;;;;;;;;;;;;63:347;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_35": {
									"entryPoint": 123,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getOwner_43": {
									"entryPoint": 322,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1739:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "677:11:1",
														"type": ""
													}
												],
												"src": "593:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:1"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "908:23:1",
																		"type": "",
																		"value": "You are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "885:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "866:6:1",
														"type": ""
													}
												],
												"src": "768:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1101:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1167:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1108:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1273:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																	"nodeType": "YulIdentifier",
																	"src": "1184:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1184:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1286:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1297:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1302:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1286:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1079:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1087:3:1",
														"type": ""
													}
												],
												"src": "945:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1488:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1498:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1510:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1498:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1556:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1541:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1564:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1560:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1534:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1590:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1724:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1598:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1468:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1483:4:1",
														"type": ""
													}
												],
												"src": "1317:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c806383197ef014610039578063893d20e81461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e61007b565b005b34801561005c57600080fd5b50610065610142565b60405161007291906101ac565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010090610224565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101968261016b565b9050919050565b6101a68161018b565b82525050565b60006020820190506101c1600083018461019d565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b600061020e6015836101c7565b9150610219826101d8565b602082019050919050565b6000602082019050818103600083015261023d81610201565b905091905056fea264697066735822122072aa65daf43d79b5de83fd37dcb6b09c98ad0019c8edf8f0916acc0694e52c1664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x50 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP1 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E PUSH1 0x15 DUP4 PUSH2 0x1C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x219 DUP3 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D DUP2 PUSH2 0x201 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xAA65DAF43D79B5DE83FD37DCB6B09C98AD0019 0xC8 0xED 0xF8 CREATE SWAP2 PUSH11 0xCC0694E52C1664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "63:347:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:132;;;;;;;;;;;;;:::i;:::-;;331:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;194:132;246:10;239:17;;:5;;;;;;;;;;:17;;;231:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;312:5;;;;;;;;;;291:28;;;331:76;370:7;395:5;;;;;;;;;;;388:12;;331:76;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:171::-;908:23;904:1;896:6;892:14;885:47;768:171;:::o;945:366::-;1087:3;1108:67;1172:2;1167:3;1108:67;:::i;:::-;1101:74;;1184:93;1273:3;1184:93;:::i;:::-;1302:2;1297:3;1293:12;1286:19;;945:366;;;:::o;1317:419::-;1483:4;1521:2;1510:9;1506:18;1498:26;;1570:9;1564:4;1560:20;1556:1;1545:9;1541:17;1534:47;1598:131;1724:4;1598:131;:::i;:::-;1590:139;;1317:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "126800",
								"executionCost": "24437",
								"totalCost": "151237"
							},
							"external": {
								"destroy()": "32022",
								"getOwner()": "2522"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 153,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 136,
									"end": 146,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 130,
									"end": 135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 135,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 130,
									"end": 146,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 130,
									"end": 146,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 130,
									"end": 146,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 146,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 410,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 410,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 410,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 410,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072aa65daf43d79b5de83fd37dcb6b09c98ad0019c8edf8f0916acc0694e52c1664736f6c63430008120033",
									".code": [
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "83197EF0"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 410,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 194,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 239,
											"end": 256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 239,
											"end": 256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 239,
											"end": 256,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 312,
											"end": 317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 312,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 312,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 319,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 768,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F7420746865206F776E65720000000000000000000000"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 768,
											"end": 939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1311,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 945,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1167,
											"end": 1170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1108,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1175,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1108,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1273,
											"end": 1276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1184,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1184,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1736,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1317,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1598,
											"end": 1729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Practice/Destruct.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0",
							"getOwner()": "893d20e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Practice/Destruct.sol\":\"HelloWorld\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Practice/Destruct.sol\":{\"keccak256\":\"0x2e5182ff423d3e4641a6828e2c99158edd5310ec221fa511baa3888f33e0d341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://003f3fd344141ff77007daa28dd6e90d28fc63fdc1cba2e3c86094ea27d53a13\",\"dweb:/ipfs/QmU2QWHgcmCyBuEs16etE1gyS2C1oWG5LNYXhTmZpeqn8x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Practice/Destruct.sol:HelloWorld",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. The underlying opcode will eventually undergo breaking changes, and its use is not recommended.\n  --> Practice/Destruct.sol:12:9:\n   |\n12 |         selfdestruct(payable(owner));\n   |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. The underlying opcode will eventually undergo breaking changes, and its use is not recommended.",
				"severity": "warning",
				"sourceLocation": {
					"end": 303,
					"file": "Practice/Destruct.sol",
					"start": 291
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Practice/Destruct.sol": {
				"ast": {
					"absolutePath": "Practice/Destruct.sol",
					"exportedSymbols": {
						"HelloWorld": [
							44
						]
					},
					"id": 45,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HelloWorld",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "HelloWorld",
							"nameLocation": "72:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "96:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "88:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "120:33:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "130:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "136:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "140:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "136:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "130:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "130:16:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "120:0:0"
									},
									"scope": 44,
									"src": "107:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "185:3:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:0"
									},
									"scope": 44,
									"src": "158:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "221:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "239:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "246:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "250:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "246:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "239:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "257:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "231:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "231:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 30,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "312:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "304:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 28,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "304:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "304:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 27,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "291:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "291:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "291:28:0"
											}
										]
									},
									"functionSelector": "83197ef0",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroy",
									"nameLocation": "203:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:0:0"
									},
									"scope": 44,
									"src": "194:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "378:29:0",
										"statements": [
											{
												"expression": {
													"id": 40,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "395:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 39,
												"id": 41,
												"nodeType": "Return",
												"src": "388:12:0"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "340:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:0"
									},
									"scope": 44,
									"src": "331:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 45,
							"src": "63:347:0",
							"usedErrors": []
						}
					],
					"src": "32:378:0"
				},
				"id": 0
			}
		}
	}
}